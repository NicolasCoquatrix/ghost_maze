##### GHOST MAZE #####

# Ghost Maze est un jeu créé durant mon parcours de formation en développement Web et Web mobile.

# La version 2.0.0 ajoute :
# - Un écran d'accueil,
# - Un écran de victoire,
# - Création d'un nouveau labyrinthe inspiré de Pac Man,
# - Amélioration de coté graphisme du programme (style console rétro).


## IMPORTATIONS ##
import os #os.system("cls")
import time #time.sleep()
import msvcrt #msvcrt.getch()

retry = "o"
while retry == "o" :
    ## DÉFINITION DES FONCTIONS DE BASE ##
    def get_user_input():
        while True:
            if msvcrt.kbhit():
                char = msvcrt.getch().decode('utf-8').lower()
                return char


    ## DÉFINITION DE L'ECRAN DU JEU ##
    game_screen_head_game_name = "╭" + "─"*94 + "╮\n│ ⨂" + " "*89 + "⨂  │\n│" + " "*34 + "🅖  🅞  🅢  🅣      🅜  🅐  🅩  🅔" + " "*34+ "│\n│" + " "*94 + "│\n│" + " "*37 + "╭" + "─"*18 + "╮" + " "*37 + "│\n│" + " "*37 + "│  PRÊT À JOUER ?  │" + " "*37 + "│\n│" + " "*37 + "│    ► Espace ◄    │" + " "*37 + "│\n│" + " "*37 + "╰" + "─"*18 + "╯" + " "*37 + "│"
    game_screen_head_before_score = "╭" + "─"*94 + "╮\n│ ⨂" + " "*89 + "⨂  │\n│" + " "*34 + "🅖  🅞  🅢  🅣      🅜  🅐  🅩  🅔" + " "*34+ "│\n│" + " "*94 + "│\n│" + " "*37 + "╭" + "─"*18 + "╮" + " "*37 + "│\n│" + " "*37 + "│ CLÉS  RÉCUPÉRÉES │" + " "*37 + "│\n│" + " "*37 + "│" + " "*5
    game_screen_head_after_score = " // 20" + " "*5 + "│" + " "*37 + "│\n│" + " "*37 + "╰" + "─"*18 + "╯" + " "*37 + "│"
    game_screen_foot = "│ ⨂" + " "*89 + "⨂  │\n╰" + "─"*94 + "╯"
    game_screen_head_win = "╭" + "─"*94 + "╮\n│ ⨂" + " "*89 + "⨂  │\n│" + " "*34 + "🅖  🅞  🅢  🅣      🅜  🅐  🅩  🅔" + " "*34+ "│\n│" + " "*94 + "│\n│" + " "*37 + "╭" + "─"*18 + "╮" + " "*37 + "│\n│" + " "*37 + "│    REJOUER ??    │" + " "*37 + "│\n│" + " "*37 + "│ ► OUI ◄  ► NON ◄ │" + " "*37 + "│\n│" + " "*37 + "╰" + "─"*18 + "╯" + " "*37 + "│"
    game_screen_head_thanks = "╭" + "─"*94 + "╮\n│ ⨂" + " "*89 + "⨂  │\n│" + " "*34 + "🅖  🅞  🅢  🅣      🅜  🅐  🅩  🅔" + " "*34+ "│\n│" + " "*94 + "│\n│" + " "*37 + "╭" + "─"*18 + "╮" + " "*37 + "│\n│" + " "*37 + "│  MERCI BEAUCOUP  │" + " "*37 + "│\n│" + " "*37 + "│   D'AVOIR JOUÉ   │" + " "*37 + "│\n│" + " "*37 + "╰" + "─"*18 + "╯" + " "*37 + "│"


    ## DÉFINITION DE L'ECRAN D'ACCEUIL, DES COMMANDES ET WIN ##
    game_name = [["   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "],
                ["   "," ╔═","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═╕ "," ╒═","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═╗ ","   "],
                ["   "," ║ ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "," │ "," │ ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "," ║ ","   "],
                ["   "," ║ ","   "," ╭─","───","───","─╮ ","   "," ╭─","───","───","───","─╮ ","   "," │ "," │ ","   "," ╭─","───","───","───","─╮ ","   "," ╭─","───","───","─╮ ","   "," ║ ","   "],
                ["   "," ║ ","   "," │ ","   ","   "," │ ","   "," │ ","   ","   ","   "," │ ","   "," │ "," │ ","   "," │ ","   ","   ","   "," │ ","   "," │ ","   ","   "," │ ","   "," ║ ","   "],
                ["   "," ║ ","   "," │ ","   ","   "," ╘═","═══","═╛ ","   ","   ","   "," ╘═","═══","═╛ "," ╘═","═══","═╛ ","   ","   ","   "," ╘═","═══","═╛ ","   ","   "," │ ","   "," ║ ","   "],
                ["   "," ║ ","   "," │ ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "," │ ","   "," ║ ","   "],
                ["   "," ╚═","═══","═╛ ","   ","  "," M "," E "," T "," Z ","   "," N "," U "," M "," E "," R "," I "," C ","   "," S "," C "," H "," O "," O "," L ","    "," ╘═","═══","═╝ ","   "],
                ["   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "],
                ["   "," ■ "," ■ "," ■ ","   ","   "," ■ ","   ","   ","   "," ■ ","   ","   "," ■ "," ■ "," ■ "," ■ ","   ","   ","   "," ■ "," ■ "," ■ "," ■ ","   "," ■ "," ■ "," ■ "," ■ "," ■ "],
                [" ■ ","   ","   ","   "," ■ ","   "," ■ ","   ","   ","   "," ■ ","   "," ■ ","   ","   ","   ","   "," ■ ","   "," ■ ","   ","   ","   ","   ","   ","   ","   "," ■ ","   ","   "],
                [" ■ ","   ","   ","   ","   ","   "," ■ ","   ","   ","   "," ■ ","   "," ■ ","   ","   ","   ","   "," ■ ","   "," ■ ","   ","   ","   ","   ","   ","   ","   "," ■ ","   ","   "],
                [" ■ ","   ","   ","   ","   ","   "," ■ "," ■ "," ■ "," ■ "," ■ ","   "," ■ ","   ","   ","   ","   "," ■ ","   ","   "," ■ "," ■ "," ■ ","   ","   ","   ","   "," ■ ","   ","   "],
                [" ■ ","   ","   "," ■ "," ■ ","   "," ■ ","   ","   ","   "," ■ ","   "," ■ ","   ","   ","   ","   "," ■ ","   ","   ","   ","   ","   "," ■ ","   ","   ","   "," ■ ","   ","   "],
                [" ■ ","   ","   ","   "," ■ ","   "," ■ ","   ","   ","   "," ■ ","   "," ■ ","   ","   ","   ","   "," ■ ","   ","   ","   ","   ","   "," ■ ","   ","   ","   "," ■ ","   ","   "],
                ["   "," ■ "," ■ "," ■ ","   ","   "," ■ ","   ","   ","   "," ■ ","   ","   "," ■ "," ■ "," ■ "," ■ ","   ","   "," ■ "," ■ "," ■ "," ■ ","   ","   ","   ","   "," ■ ","   ","   "],
                ["   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "],
                ["   ","   ","   "," ■ ","   ","   ","   "," ■ ","    ","   "," ■ "," ■ "," ■ ","   ","    "," ■ "," ■ "," ■ "," ■ "," ■ ","    "," ■ "," ■ "," ■ "," ■ "," ■ ","   ","   ","   ",""],
                ["   ","   ","   "," ■ "," ■ ","   "," ■ "," ■ ","    "," ■ ","   ","   ","   "," ■ ","    ","   ","   ","   ","   "," ■ ","    "," ■ ","   ","   ","   ","   ","   ","   ","   ",""],
                ["   ","   ","   "," ■ ","   "," ■ ","   "," ■ ","    "," ■ ","   ","   ","   "," ■ ","    ","   ","   ","   "," ■ ","   ","    "," ■ ","   ","   ","   ","   ","   ","   ","   ",""],
                ["   ","   ","   "," ■ ","   "," ■ ","   "," ■ ","    "," ■ "," ■ "," ■ "," ■ "," ■ ","    ","   ","   "," ■ ","   ","   ","    "," ■ "," ■ "," ■ "," ■ ","   ","   ","   ","   ",""],
                ["   ","   ","   "," ■ ","   ","   ","   "," ■ ","    "," ■ ","   ","   ","   "," ■ ","    ","   "," ■ ","   ","   ","   ","    "," ■ ","   ","   ","   ","   ","   ","   ","   ",""],
                ["   ","   ","   "," ■ ","   ","   ","   "," ■ ","    "," ■ ","   ","   ","   "," ■ ","    "," ■ ","   ","   ","   ","   ","    "," ■ ","   ","   ","   ","   ","   ","   ","   ",""],
                ["   ","   ","   "," ■ ","   ","   ","   "," ■ ","    "," ■ ","   ","   ","   "," ■ ","    "," ■ "," ■ "," ■ "," ■ "," ■ ","    "," ■ "," ■ "," ■ "," ■ "," ■ ","   ","   ","   ",""],
                ["   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "],
                ["   ","   ","   "," ╒═","═╗ ","    "," N "," I "," C "," O "," L "," A "," S ","  ","  "," C "," O "," Q "," U "," A "," T "," R "," I "," X ","    "," ╔═","═╕ ","   ","   ","   "],
                ["   "," ╓─","───","─╯ "," ║ ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "," ║ "," ╰─","───","─╖ ","   "],
                ["   "," ║ ","   ","   "," ╚═","═══","═══","═══","═╕ "," ╒═","═══","═══","═══","═══","═╕ "," ╒═","═══","═══","═══","═══","═╕ "," ╒═","═══","═══","═══","═╝ ","   ","   "," ║ ","   "],
                ["   "," ║ ","   "," ╭─","───","───","───","───","─╯ "," ╰─","───","───","─╮ ","   "," │ "," │ ","   "," ╭─","───","───","─╯ "," ╰─","───","───","───","───","─╮ ","   "," ║ ","   "],
                ["   "," ║ ","   "," ╰─","───","───","───","───","───","───","───","───","─╯ ","   "," ╰─","─╯ ","   "," ╰─","───","───","───","───","───","───","───","───","─╯ ","   "," ║ ","   "],
                ["   "," ║ ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "," ║ ","   "],
                ["   "," ╚═","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═╝ ","   "],
                ["   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "]]

    directional_keys = [["   ","   ","   ","   ","   ","   ","   "," ▲ ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "," ╭─","───","─╮ ","   ","   ","   ","   ","   ","   "],
                        ["   ","   ","   ","   ","   ","   ","   "," Z ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "," │ ","─┼─"," │ ","   ","   ","   ","   ","   ","   "],
                        ["   ","   ","   ","   ","   ","   "," ╭─","─┴─","─╮ ","   ","   ","   ","   ","   ","   ","   ","   ","   "," ╭─","───","─╮ "," ╰─","───","─╯ "," ╭─","───","─╮ ","   ","   ","   "],
                        ["   ","   ","   ","   ","  ◄"," Q ","─┤ "," ⓿ "," ├─"," D ","►  ","   ","   ","   ","   ","   ","   ","   "," │ ","─┼─"," │ ","   ","   ","   "," │ ","─┼─"," │ ","   ","   ","   "],
                        ["   ","   ","   ","   ","   ","   "," ╰─","─┬─","─╯ ","   ","   ","   ","   ","   ","   ","   ","   ","   "," ╰─","───","─╯ "," ╭─","───","─╮ "," ╰─","───","─╯ ","   ","   ","   "],
                        ["   ","   ","   ","   ","   ","   ","   "," S ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "," │ ","─┼─"," │ ","   ","   ","   ","   ","   ","   "],
                        ["   ","   ","   ","   ","   ","   ","   "," ▼ ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "," ╰─","───","─╯ ","   ","   ","   ","   ","   ","   "]]

    game_win = [["   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "],
                ["   "," ╔═","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═╕ "," ╒═","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═╗ ","   "],
                ["   "," ║ ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "," │ "," │ ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "," ║ ","   "],
                ["   "," ║ ","   "," ╭─","───","───","─╮ ","   "," ╭─","───","───","───","─╮ ","   "," │ "," │ ","   "," ╭─","───","───","───","─╮ ","   "," ╭─","───","───","─╮ ","   "," ║ ","   "],
                ["   "," ║ ","   "," │ ","   ","   "," │ ","   "," │ ","   ","   ","   "," │ ","   "," ╰─","─╯ ","   "," │ ","   ","   ","   "," │ ","   "," │ ","   ","   "," │ ","   "," ║ ","   "],
                ["   "," ║ ","   "," ╰─","───","───","─╯ ","   "," ╰─","───","───","───","─╯ ","   ","   ","   ","   "," ╰─","───","───","───","─╯ ","   "," ╰─","───","───","─╯ ","   "," ║ ","   "],
                ["   "," ║ ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "," ■ "," ■ ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "," ║ ","   "],
                ["   "," ║ ","   "," ╭─","───","───","─╮ ","   "," ╭─","─╮ ","   ","   ","   ","   "," ■ "," ■ ","   ","   ","   ","   "," ╭─","─╮ ","   "," ╭─","───","───","─╮ ","   "," ║ ","   "],
                ["   "," ║ ","   "," ╰─","───","───","─╯ ","   "," ╰─","─╯ ","   ","   ","   "," ■ "," ■ "," ■ "," ■ ","   ","   ","   "," ╰─","─╯ ","   "," ╰─","───","───","─╯ ","   "," ║ ","   "],
                ["   "," ║ ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "," ■ "," ■ "," ■ "," ■ ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "," ║ ","   "],
                ["   "," ╚═","═══","═══","═══","═══","═╗ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ╔═","═══","═══","═══","═══","═╝ ","   "],
                ["   ","   ","   ","   ","   ","   "," ║ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ║ ","   ","   ","   ","   ","   ","   "],
                ["   ","   ","   ","   ","   ","   "," ║ ","   "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ ","   "," ║ ","   ","   ","   ","   ","   ","   "],
                ["   ","   ","   ","   ","   ","   "," ║ ","   ","   "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ ","   ","   "," ║ ","   ","   ","   ","   ","   ","   "],
                [" ╔═","═══","═══","═╧═","═══","═══","═╝ ","   ","   ","   "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ ","   ","   ","   "," ╚═","═══","═══","═╧═","═══","═══","═╗ "],
                [" ║ ","   ","   ","   ","   ","   ","   ","   ","   ","   "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ ","   ","   ","   ","   ","   ","   ","   ","   "," ✪ "," ║ "],
                [" ╚═","═══","═══","═╤═","═══","═══","═╗ ","   ","   "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ "," ■ ","   ","   "," ╔═","═══","═══","═╤═","═══","═══","═╝ "],
                ["   ","   ","   ","   ","   ","   "," ║ ","   ","   "," ■ "," ■ "," ■ "," ■ "," ■ ","   ","   "," ■ "," ■ "," ■ "," ■ "," ■ ","   ","   "," ║ ","   ","   ","   ","   ","   ","   "],
                ["   ","   ","   ","   ","   ","   "," ║ ","   "," ■ "," ■ "," ■ "," ■ "," ■ ","   ","   ","   ","   "," ■ "," ■ "," ■ "," ■ "," ■ ","   "," ║ ","   ","   ","   ","   ","   ","   "],
                ["   ","   ","   ","   ","   ","   "," ║ ","   "," ■ "," ■ "," ■ ","   ","   ","   "," ╭─","─╮ ","   ","   ","   "," ■ "," ■ "," ■ ","   "," ║ ","   ","   ","   ","   ","   ","   "],
                ["   "," ╔═","═══","═══","═══","═══","═╝ ","   ","   ","   ","   ","   ","   ","   "," ╰─","─╯ ","   ","   ","   ","   ","   ","   ","   "," ╚═","═══","═══","═══","═══","═╗ ","   "],
                ["   "," ║ ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "," ║ ","   "],
                ["   "," ║ ","   "," ■ "," ■ "," ■ ","   ","   "," ■ "," ■ "," ■ ","   ","   ","   "," ■ "," ■ ","   ","   "," ■ ","   ","   "," ■ ","   ","   "," ■ "," ■ ","   ","   "," ║ ","   "],
                ["   "," ║ ","   "," ■ ","   ","   "," ■ ","   "," ■ ","   ","   "," ■ ","   "," ■ ","   ","   "," ■ ","   "," ■ ","   ","   "," ■ ","   "," ■ ","   ","   "," ■ ","   "," ║ ","   "],
                ["   "," ║ ","   "," ■ "," ■ "," ■ ","   ","   "," ■ "," ■ "," ■ ","   ","   "," ■ "," ■ "," ■ "," ■ ","   "," ■ ","   ","   "," ■ ","   "," ■ ","   ","   "," ■ ","   "," ║ ","   "],
                ["   "," ║ ","   "," ■ ","   ","   "," ■ ","   "," ■ ","   "," ■ ","   ","   "," ■ ","   ","   "," ■ ","   ","   "," ■ "," ■ ","   ","   "," ■ ","   ","   "," ■ ","   "," ║ ","   "],
                ["   "," ║ ","   "," ■ "," ■ "," ■ ","   ","   "," ■ ","   ","   "," ■ ","   "," ■ ","   ","   "," ■ ","   ","   "," ■ "," ■ ","   ","   ","   "," ■ "," ■ ","   ","   "," ║ ","   "],
                ["   "," ║ ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "," ║ ","   "],
                ["   "," ║ ","   "," ╭─","───","───","───","───","───","───","───","───","─╮ ","   "," ╭─","─╮ ","   "," ╭─","───","───","───","───","───","───","───","───","─╮ ","   "," ║ ","   "],
                ["   "," ║ ","   "," ╰─","───","───","───","───","───","───","───","───","─╯ ","   "," ╰─","─╯ ","   "," ╰─","───","───","───","───","───","───","───","───","─╯ ","   "," ║ ","   "],
                ["   "," ║ ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "," ║ ","   "],
                ["   "," ╚═","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═╝ ","   "],
                ["   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "]]


    ## DÉFINITION DU LABYRINTHE ##
    ghost_maze = [[" V "," V "," V "," V "," V "," V "," V "," V "," V "," V "," V "," V "," V "," V "," V "," V "," V "," V "," V "," V "," V "," V "," V "," V "," V "," V "," V "," V "," V "," V "],
                [" V "," W "," W "," W "," W "," W "," W "," W "," W "," W "," W "," W "," W "," W "," W "," W "," W "," W "," W "," W "," W "," W "," W "," W "," W "," W "," W "," W "," W "," V "],
                [" V "," W "," R "," R "," R "," R "," R "," R "," R "," R "," K "," R "," R "," R "," W "," W "," R "," R "," R "," K "," R "," R "," R "," R "," R "," R "," R "," R "," W "," V "],
                [" V "," W "," R "," W "," W "," W "," W "," R "," W "," W "," W "," W "," W "," R "," W "," W "," R "," W "," W "," W "," W "," W "," R "," W "," W "," W "," W "," R "," W "," V "],
                [" V "," W "," K "," W "," V "," V "," W "," R "," W "," V "," V "," V "," W "," R "," W "," W "," R "," W "," V "," V "," V "," W "," R "," W "," V "," V "," W "," K "," W "," V "],
                [" V "," W "," R "," W "," W "," W "," W "," R "," W "," W "," W "," W "," W "," R "," W "," W "," R "," W "," W "," W "," W "," W "," R "," W "," W "," W "," W "," R "," W "," V "],
                [" V "," W "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," W "," V "],
                [" V "," W "," R "," W "," W "," W "," W "," R "," W "," W "," R "," W "," W "," W "," W "," W "," W "," W "," W "," R "," W "," W "," R "," W "," W "," W "," W "," R "," W "," V "],
                [" V "," W "," R "," W "," W "," W "," W "," K "," W "," W "," R "," W "," W "," W "," W "," W "," W "," W "," W "," R "," W "," W "," K "," W "," W "," W "," W "," R "," W "," V "],
                [" V "," W "," R "," R "," R "," R "," R "," R "," W "," W "," R "," R "," R "," R "," W "," W "," R "," R "," R "," R "," W "," W "," R "," R "," R "," R "," R "," R "," W "," V "],
                [" V "," W "," W "," W "," W "," W "," W "," R "," W "," W "," W "," W "," W "," R "," W "," W "," R "," W "," W "," W "," W "," W "," R "," W "," W "," W "," W "," W "," W "," V "],
                [" V "," V "," V "," V "," V "," V "," W "," R "," W "," W "," W "," W "," W "," R "," W "," W "," R "," W "," W "," W "," W "," W "," R "," W "," V "," V "," V "," V "," V "," V "],
                [" V "," V "," V "," V "," V "," V "," W "," R "," W "," W "," K "," R "," R "," R "," R "," R "," R "," R "," R "," K "," W "," W "," R "," W "," V "," V "," V "," V "," V "," V "],
                [" V "," V "," V "," V "," V "," V "," W "," R "," W "," W "," R "," W "," W "," W "," D "," D "," W "," W "," W "," R "," W "," W "," R "," W "," V "," V "," V "," V "," V "," V "],
                [" W "," W "," W "," W "," W "," W "," W "," R "," W "," W "," R "," W "," R "," R "," R "," R "," R "," R "," W "," R "," W "," W "," R "," W "," W "," W "," W "," W "," W "," W "],
                [" W "," P "," R "," R "," R "," K "," R "," R "," R "," R "," R "," W "," K "," R "," R "," R "," R "," K "," W "," R "," R "," R "," R "," R "," K "," R "," D "," R "," S "," W "],
                [" W "," W "," W "," W "," W "," W "," W "," R "," W "," W "," R "," W "," R "," R "," R "," R "," R "," R "," W "," R "," W "," W "," R "," W "," W "," W "," W "," W "," W "," W "],
                [" V "," V "," V "," V "," V "," V "," W "," R "," W "," W "," R "," W "," W "," W "," W "," W "," W "," W "," W "," R "," W "," W "," R "," W "," V "," V "," V "," V "," V "," V "],
                [" V "," V "," V "," V "," V "," V "," W "," R "," W "," W "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," W "," W "," R "," W "," V "," V "," V "," V "," V "," V "],
                [" V "," V "," V "," V "," V "," V "," W "," R "," W "," W "," R "," W "," W "," W "," W "," W "," W "," W "," W "," R "," W "," W "," R "," W "," V "," V "," V "," V "," V "," V "],
                [" V "," W "," W "," W "," W "," W "," W "," R "," W "," W "," K "," W "," W "," W "," W "," W "," W "," W "," W "," K "," W "," W "," R "," W "," W "," W "," W "," W "," W "," V "],
                [" V "," W "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," W "," W "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," W "," V "],
                [" V "," W "," R "," W "," W "," W "," W "," R "," W "," W "," W "," W "," W "," R "," W "," W "," R "," W "," W "," W "," W "," W "," R "," W "," W "," W "," W "," R "," W "," V "],
                [" V "," W "," R "," W "," W "," W "," W "," R "," W "," W "," W "," W "," W "," R "," W "," W "," R "," W "," W "," W "," W "," W "," R "," W "," W "," W "," W "," R "," W "," V "],
                [" V "," W "," R "," R "," K "," W "," W "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," W "," W "," K "," R "," R "," W "," V "],
                [" V "," W "," W "," W "," R "," W "," W "," R "," W "," W "," R "," W "," W "," W "," W "," W "," W "," W "," W "," R "," W "," W "," R "," W "," W "," R "," W "," W "," W "," V "],
                [" V "," W "," W "," W "," R "," W "," W "," R "," W "," W "," R "," W "," W "," W "," W "," W "," W "," W "," W "," R "," W "," W "," R "," W "," W "," R "," W "," W "," W "," V "],
                [" V "," W "," R "," R "," R "," R "," R "," R "," W "," W "," R "," R "," R "," K "," W "," W "," K "," R "," R "," R "," W "," W "," R "," R "," R "," R "," R "," R "," W "," V "],
                [" V "," W "," R "," W "," W "," W "," W "," W "," W "," W "," W "," W "," W "," R "," W "," W "," R "," W "," W "," W "," W "," W "," W "," W "," W "," W "," W "," R "," W "," V "],
                [" V "," W "," K "," W "," W "," W "," W "," W "," W "," W "," W "," W "," W "," R "," W "," W "," R "," W "," W "," W "," W "," W "," W "," W "," W "," W "," W "," K "," W "," V "],
                [" V "," W "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," R "," W "," V "],
                [" V "," W "," W "," W "," W "," W "," W "," W "," W "," W "," W "," W "," W "," W "," W "," W "," W "," W "," W "," W "," W "," W "," W "," W "," W "," W "," W "," W "," W "," V "],
                [" V "," V "," V "," V "," V "," V "," V "," V "," V "," V "," V "," V "," V "," V "," V "," V "," V "," V "," V "," V "," V "," V "," V "," V "," V "," V "," V "," V "," V "," V "]]

    # Légende : P = Joueur │ R = Route │ K = Clé │ S = Étoile │ W = Mur │ D = Porte │ V = Vide(hors-jeu)
    player_passable_boxs = [" R "," K "," S "]

    maze = [["   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "],
            ["   "," ╔═","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═╕ "," ╒═","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═╗ ","   "],
            ["   "," ║ ","   ","   ","   ","   ","   ","   ","   ","   "," ⬪ ","   ","   ","   "," │ "," │ ","   ","   ","   "," ⬪ ","   ","   ","   ","   ","   ","   ","   ","   "," ║ ","   "],
            ["   "," ║ ","   "," ╭─","───","───","─╮ ","   "," ╭─","───","───","───","─╮ ","   "," │ "," │ ","   "," ╭─","───","───","───","─╮ ","   "," ╭─","───","───","─╮ ","   "," ║ ","   "],
            ["   "," ║ "," ⬪ "," │ ","   ","   "," │ ","   "," │ ","   ","   ","   "," │ ","   "," │ "," │ ","   "," │ ","   ","   ","   "," │ ","   "," │ ","   ","   "," │ "," ⬪ "," ║ ","   "],
            ["   "," ║ ","   "," ╰─","───","───","─╯ ","   "," ╰─","───","───","───","─╯ ","   "," ╰─","─╯ ","   "," ╰─","───","───","───","─╯ ","   "," ╰─","───","───","─╯ ","   "," ║ ","   "],
            ["   "," ║ ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "," ║ ","   "],
            ["   "," ║ ","   "," ╭─","───","───","─╮ ","   "," ╭─","─╮ ","   "," ╭─","───","───","───","───","───","───","─╮ ","   "," ╭─","─╮ ","   "," ╭─","───","───","─╮ ","   "," ║ ","   "],
            ["   "," ║ ","   "," ╰─","───","───","─╯ "," ⬪ "," │ "," │ ","   "," ╰─","───","───","─╮ "," ╭─","───","───","─╯ ","   "," │ "," │ "," ⬪ "," ╰─","───","───","─╯ ","   "," ║ ","   "],
            ["   "," ║ ","   ","   ","   ","   ","   ","   "," │ "," │ ","   ","   ","   ","   "," │ "," │ ","   ","   ","   ","   "," │ "," │ ","   ","   ","   ","   ","   ","   "," ║ ","   "],
            ["   "," ╚═","═══","═══","═══","═══","═╗ ","   "," │ "," ╰─","───","───","─╮ ","   "," │ "," │ ","   "," ╭─","───","───","─╯ "," │ ","   "," ╔═","═══","═══","═══","═══","═╝ ","   "],
            ["   ","   ","   ","   ","   ","   "," ║ ","   "," │ "," ╭─","───","───","─╯ ","   "," ╰─","─╯ ","   "," ╰─","───","───","─╮ "," │ ","   "," ║ ","   ","   ","   ","   ","   ","   "],
            ["   ","   ","   ","   ","   ","   "," ║ ","   "," │ "," │ "," ⬪ ","   ","   ","   ","   ","   ","   ","   ","   "," ⬪ "," │ "," │ ","   "," ║ ","   ","   ","   ","   ","   ","   "],
            ["   ","   ","   ","   ","   ","   "," ║ ","   "," │ "," │ ","   "," ╔═","═══","══╡","---","---","╞══","═══","═╗ ","   "," │ "," │ ","   "," ║ ","   ","   ","   ","   ","   ","   "],
            [" ╔═","═══","═══","═╧═","═══","═══","═╝ ","   "," ╰─","─╯ ","   "," ║ ","   ","   ","   ","   ","   ","   "," ║ ","   "," ╰─","─╯ ","   "," ╚═","═══","═══","═╤═","═══","═══","═╗ "],
            [" ║ "," ⓿ ","   ","   ","   "," ⬪ ","   ","   ","   ","   ","   "," ║ "," ⬪ ","   ","   ","   ","   "," ⬪ "," ║ ","   ","   ","   ","   ","   "," ⬪ ","   "," ╎ ","   "," ★ "," ║ "],
            [" ╚═","═══","═══","═╤═","═══","═══","═╗ ","   "," ╭─","─╮ ","   "," ║ ","   ","   ","   ","   ","   ","   "," ║ ","   "," ╭─","─╮ ","   "," ╔═","═══","═══","═╧═","═══","═══","═╝ "],
            ["   ","   ","   ","   ","   ","   "," ║ ","   "," │ "," │ ","   "," ╚═","═══","═══","═══","═══","═══","═══","═╝ ","   "," │ "," │ ","   "," ║ ","   ","   ","   ","   ","   ","   "],
            ["   ","   ","   ","   ","   ","   "," ║ ","   "," │ "," │ ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "," │ "," │ ","   "," ║ ","   ","   ","   ","   ","   ","   "],
            ["   ","   ","   ","   ","   ","   "," ║ ","   "," │ "," │ ","   "," ╭─","───","───","───","───","───","───","─╮ ","   "," │ "," │ ","   "," ║ ","   ","   ","   ","   ","   ","   "],
            ["   "," ╔═","═══","═══","═══","═══","═╝ ","   "," ╰─","─╯ "," ⬪ "," ╰─","───","───","─╮ "," ╭─","───","───","─╯ "," ⬪ "," ╰─","─╯ ","   "," ╚═","═══","═══","═══","═══","═╗ ","   "],
            ["   "," ║ ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "," │ "," │ ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "," ║ ","   "],
            ["   "," ║ ","   "," ╭─","───","───","─╮ ","   "," ╭─","───","───","───","─╮ ","   "," │ "," │ ","   "," ╭─","───","───","───","─╮ ","   "," ╭─","───","───","─╮ ","   "," ║ ","   "],
            ["   "," ║ ","   "," ╰─","───","─╮ "," │ ","   "," ╰─","───","───","───","─╯ ","   "," ╰─","─╯ ","   "," ╰─","───","───","───","─╯ ","   "," │ "," ╭─","───","─╯ ","   "," ║ ","   "],
            ["   "," ║ ","   ","   "," ⬪ "," │ "," │ ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "," │ "," │ "," ⬪ ","   ","   "," ║ ","   "],
            ["   "," ╙─","───","─╮ ","   "," │ "," │ ","   "," ╭─","─╮ ","   "," ╭─","───","───","───","───","───","───","─╮ ","   "," ╭─","─╮ ","   "," │ "," │ ","   "," ╭─","───","─╜ ","   "],
            ["   "," ╓─","───","─╯ ","   "," ╰─","─╯ ","   "," │ "," │ ","   "," ╰─","───","───","─╮ "," ╭─","───","───","─╯ ","   "," │ "," │ ","   "," ╰─","─╯ ","   "," ╰─","───","─╖ ","   "],
            ["   "," ║ ","   ","   ","   ","   ","   ","   "," │ "," │ ","   ","   ","   "," ⬪ "," │ "," │ "," ⬪ ","   ","   ","   "," │ "," │ ","   ","   ","   ","   ","   ","   "," ║ ","   "],
            ["   "," ║ ","   "," ╭─","───","───","───","───","─╯ "," ╰─","───","───","─╮ ","   "," │ "," │ ","   "," ╭─","───","───","─╯ "," ╰─","───","───","───","───","─╮ ","   "," ║ ","   "],
            ["   "," ║ "," ⬪ "," ╰─","───","───","───","───","───","───","───","───","─╯ ","   "," ╰─","─╯ ","   "," ╰─","───","───","───","───","───","───","───","───","─╯ "," ⬪ "," ║ ","   "],
            ["   "," ║ ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "," ║ ","   "],
            ["   "," ╚═","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═══","═╝ ","   "],
            ["   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "]]


    ## DÉFINITION DES VARIABLES DU PROGRAMME ##
    start = ""
    win = False
    speed = 0.1
    player_coordinates = [0,0]
    player_skin = [" ⓿ "," ❶ "," ❷ "," ❸ "," ❹ "," ❺ "," ❻ "," ❼ "," ❽ "," ❾ "," ❿ "," ⓫ "," ⓬ "," ⓭ "," ⓮ "," ⓯ "," ⓰ "," ⓱ "," ⓲ "," ⓳ "," ⓴ "," ✪ "]
    current_skin = 0
    score = 0
    double_door = False
    final_door = False


    ## AFFICHAGE DU NOM DU JEU ##
    os.system("cls")
    print(game_screen_head_game_name)
    for i in range (len(game_name)) :
        line = ""
        for j in range (len(game_name[i])) :
            line += game_name[i][j]
        print("│ ",line, " │")
    for i in range (len(directional_keys)) :
        line = ""
        for j in range (len(directional_keys[i])) :
            line += directional_keys[i][j]
        print("│ ",line, " │")
    print(game_screen_foot + "\n" + " "*47 + "►", end='')
    while start != " " :
        start = get_user_input()


    ## AFFICHAGE DE L'ÉCRAN DU DEBUT DU JEU ##
    os.system("cls")
    print(game_screen_head_before_score + "00" + game_screen_head_after_score)
    # Écran normal
    for i in range (len(maze)) :
        line = ""
        for j in range (len(maze[i])) :
            line += maze[i][j]
        print("│ ",line, " │")
    # Écran debug
    #for i in range (len(ghost_maze)) :
    #    line = ""
    #    for j in range (len(ghost_maze[i])) :
    #        line += ghost_maze[i][j]
    #    print("│ ",line, " │")
    # Bas de l'écran
    for i in range (len(directional_keys)) :
        line = ""
        for j in range (len(directional_keys[i])) :
            line += directional_keys[i][j]
        print("│ ",line, " │")
    print(game_screen_foot + "\n" + " "*47 + "►", end='')


    # JEU
    while win == False :

        # Selection du personnage
        for line in range (len(ghost_maze)) :
            for box in range (len(ghost_maze[0])) :
                if ghost_maze[line][box] == " P " :
                    player_coordinates = [line,box]
                    break
            if ghost_maze[line][box] == " P " :
                break 

        # Déplacement du personnage
        shift = get_user_input()

        # Déplacement haut
        if shift == "z" :
            if ghost_maze[line-1][box] in player_passable_boxs :
                if ghost_maze[line-1][box] == " K " :
                    current_skin += 1
                    score +=1
                elif ghost_maze[line-1][box] == " S " :
                    current_skin += 1
                    score +=1
                    win = True
                ghost_maze[line-1][box] = " P "
                maze[line-1][box] = player_skin[current_skin]
                ghost_maze[line][box] = " R "
                maze[line][box] = "   "

        # Déplacement bas
        elif shift == "s" :
            if ghost_maze[line+1][box] in player_passable_boxs :
                if ghost_maze[line+1][box] == " K " :
                    current_skin += 1
                    score +=1
                elif ghost_maze[line+1][box] == " S " :
                    current_skin += 1
                    score +=1
                    win = True
                ghost_maze[line+1][box] = " P "
                maze[line+1][box] = player_skin[current_skin]
                ghost_maze[line][box] = " R "
                maze[line][box] = "   "

        # Déplacement droite
        elif shift == "d" :
            if ghost_maze[line][box+1] in player_passable_boxs :
                if ghost_maze[line][box+1] == " K " :
                    current_skin += 1
                    score +=1
                elif ghost_maze[line][box+1] == " S " :
                    current_skin += 1
                    score +=1
                    win = True
                ghost_maze[line][box+1] = " P "
                maze[line][box+1] = player_skin[current_skin]
                ghost_maze[line][box] = " R "
                maze[line][box] = "   "

        # Déplacement gauche
        elif shift == "q" :
            if ghost_maze[line][box-1] in player_passable_boxs :
                if ghost_maze[line][box-1] == " K " :
                    current_skin += 1
                    score +=1
                elif ghost_maze[line][box-1] == " S " :
                    current_skin += 1
                    score +=1
                    win = True
                ghost_maze[line][box-1] = " P "
                maze[line][box-1] = player_skin[current_skin]
                ghost_maze[line][box] = " R "
                maze[line][box] = "   "

        # Ouverture des portes
        if score == 10 and double_door == False:
            double_door = True
            ghost_maze[13][14] = " R "
            maze[13][14] = "   "
            ghost_maze[13][15] = " R "
            maze[13][15] = "   "
        if score == 20 and final_door == False:
            final_door = True
            ghost_maze[15][26] = " R "
            maze[14][26] = "═╧═"
            maze[15][26] = "   "
            maze[16][26] = "═╤═"

        # Affichage en jeu
        os.system("cls")
        if score < 10 :
            score = str(score)
            score = "0" + score
        else :
            score = str(score)
        print(game_screen_head_before_score + score[0] + score[1] + game_screen_head_after_score)
        # Écran normal
        for i in range (len(maze)) :
            line = ""
            for j in range (len(maze[i])) :
             line += maze[i][j]
            print("│ ",line, " │")
       # Écran debug
#        for i in range (len(ghost_maze)) :
#            line = ""
#            for j in range (len(ghost_maze[i])) :
#                line += ghost_maze[i][j]
#            print("│ ",line, " │")
        # Bas de l'écran
        for i in range (len(directional_keys)) :
            line = ""
            for j in range (len(directional_keys[i])) :
                line += directional_keys[i][j]
            print("│ ",line, " │")
        print(game_screen_foot + "\n" + " "*47 + "►", end='')
        score = int(score)

    # Affichage fin de partie
    os.system("cls")
    print(game_screen_head_win)
    # Écran normal
    for i in range (len(game_win)) :
        line = ""
        for j in range (len(game_win[i])) :
            line += game_win[i][j]
        print("│ ",line, " │")
    # Écran debug
#    for i in range (len(ghost_maze)) :
#        line = ""
#        for j in range (len(ghost_maze[i])) :
#            line += ghost_maze[i][j]
#        print("│ ",line, " │")
    # Bas de l'écran
    for i in range (len(directional_keys)) :
        line = ""
        for j in range (len(directional_keys[i])) :
            line += directional_keys[i][j]
        print("│ ",line, " │")
    print(game_screen_foot + "\n" + " "*47 + "►", end='')
    retry = ""
    while retry != "o" and retry != "n" :
        retry = get_user_input()

# Affichage fin de partie
os.system("cls")
print(game_screen_head_thanks)
for i in range (len(game_name)) :
    line = ""
    for j in range (len(game_name[i])) :
        line += game_name[i][j]
    print("│ ",line, " │")
for i in range (len(directional_keys)) :
    line = ""
    for j in range (len(directional_keys[i])) :
        line += directional_keys[i][j]
    print("│ ",line, " │")
print(game_screen_foot)



# Développé par Nicolas Coquatrix